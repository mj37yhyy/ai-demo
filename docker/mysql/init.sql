-- 创建数据库
CREATE DATABASE IF NOT EXISTS text_audit CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE text_audit;

-- 原始文本表
CREATE TABLE IF NOT EXISTS raw_texts (
    id VARCHAR(36) PRIMARY KEY,
    content TEXT NOT NULL,
    source VARCHAR(100) NOT NULL,
    timestamp BIGINT NOT NULL,
    metadata JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_source (source),
    INDEX idx_timestamp (timestamp),
    INDEX idx_created_at (created_at)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 预处理文本表
CREATE TABLE IF NOT EXISTS processed_texts (
    id VARCHAR(36) PRIMARY KEY,
    raw_text_id VARCHAR(36),
    content TEXT NOT NULL,
    tokens JSON,
    features JSON,
    label TINYINT DEFAULT NULL COMMENT '0=正常，1=违规',
    source VARCHAR(100) NOT NULL,
    timestamp BIGINT NOT NULL,
    processing_metadata JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (raw_text_id) REFERENCES raw_texts(id) ON DELETE CASCADE,
    INDEX idx_label (label),
    INDEX idx_source (source),
    INDEX idx_timestamp (timestamp)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 模型表
CREATE TABLE IF NOT EXISTS models (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    type VARCHAR(50) NOT NULL COMMENT '模型类型：logistic_regression, random_forest, cnn, rnn',
    version VARCHAR(20) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    config JSON,
    metrics JSON,
    status VARCHAR(20) DEFAULT 'training' COMMENT 'training, completed, failed, deployed',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (type),
    INDEX idx_status (status),
    INDEX idx_name (name)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 审核记录表
CREATE TABLE IF NOT EXISTS audit_records (
    id VARCHAR(36) PRIMARY KEY,
    request_id VARCHAR(36) NOT NULL,
    text_content TEXT NOT NULL,
    is_violation BOOLEAN NOT NULL,
    confidence DECIMAL(5,4) NOT NULL,
    violation_type VARCHAR(50),
    model_results JSON,
    features JSON,
    explanation TEXT,
    processing_time_ms INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_request_id (request_id),
    INDEX idx_is_violation (is_violation),
    INDEX idx_violation_type (violation_type),
    INDEX idx_created_at (created_at)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 训练任务表
CREATE TABLE IF NOT EXISTS training_tasks (
    id VARCHAR(36) PRIMARY KEY,
    model_id VARCHAR(36) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    dataset_path VARCHAR(500) NOT NULL,
    config JSON NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' COMMENT 'pending, running, completed, failed',
    metrics JSON,
    start_time TIMESTAMP NULL,
    end_time TIMESTAMP NULL,
    error_message TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (model_id) REFERENCES models(id) ON DELETE CASCADE,
    INDEX idx_model_id (model_id),
    INDEX idx_status (status),
    INDEX idx_created_at (created_at)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 采集任务表
CREATE TABLE IF NOT EXISTS collection_tasks (
    id VARCHAR(36) PRIMARY KEY,
    source_type VARCHAR(20) NOT NULL COMMENT 'api, web_crawler, local_file',
    source_url VARCHAR(1000),
    source_file_path VARCHAR(500),
    config JSON NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' COMMENT 'pending, running, completed, failed',
    collected_count INT DEFAULT 0,
    total_count INT DEFAULT 0,
    progress INT DEFAULT 0,
    start_time TIMESTAMP NULL,
    end_time TIMESTAMP NULL,
    error_message TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_source_type (source_type),
    INDEX idx_status (status),
    INDEX idx_created_at (created_at)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 停用词表
CREATE TABLE IF NOT EXISTS stop_words (
    id INT AUTO_INCREMENT PRIMARY KEY,
    word VARCHAR(50) NOT NULL UNIQUE,
    language VARCHAR(10) DEFAULT 'zh' COMMENT '语言：zh, en',
    category VARCHAR(50) DEFAULT 'general',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_word (word),
    INDEX idx_language (language)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 词汇表
CREATE TABLE IF NOT EXISTS vocabulary (
    id INT AUTO_INCREMENT PRIMARY KEY,
    word VARCHAR(100) NOT NULL,
    frequency INT DEFAULT 1,
    idf_score DECIMAL(10,6),
    language VARCHAR(10) DEFAULT 'zh',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_word_language (word, language),
    INDEX idx_frequency (frequency),
    INDEX idx_idf_score (idf_score)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 系统配置表
CREATE TABLE IF NOT EXISTS system_configs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    config_key VARCHAR(100) NOT NULL UNIQUE,
    config_value TEXT NOT NULL,
    description VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_config_key (config_key)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- 插入默认停用词
INSERT IGNORE INTO stop_words (word, language, category) VALUES
('的', 'zh', 'general'),
('了', 'zh', 'general'),
('是', 'zh', 'general'),
('在', 'zh', 'general'),
('有', 'zh', 'general'),
('和', 'zh', 'general'),
('就', 'zh', 'general'),
('不', 'zh', 'general'),
('人', 'zh', 'general'),
('都', 'zh', 'general'),
('一', 'zh', 'general'),
('个', 'zh', 'general'),
('上', 'zh', 'general'),
('也', 'zh', 'general'),
('很', 'zh', 'general'),
('到', 'zh', 'general'),
('说', 'zh', 'general'),
('要', 'zh', 'general'),
('去', 'zh', 'general'),
('你', 'zh', 'general'),
('会', 'zh', 'general'),
('着', 'zh', 'general'),
('没有', 'zh', 'general'),
('看', 'zh', 'general'),
('好', 'zh', 'general'),
('自己', 'zh', 'general'),
('这', 'zh', 'general'),
('那', 'zh', 'general'),
('里', 'zh', 'general'),
('以', 'zh', 'general'),
('时候', 'zh', 'general'),
('过', 'zh', 'general'),
('下', 'zh', 'general'),
('可以', 'zh', 'general'),
('还', 'zh', 'general'),
('多', 'zh', 'general'),
('么', 'zh', 'general'),
('用', 'zh', 'general'),
('她', 'zh', 'general'),
('国', 'zh', 'general'),
('动', 'zh', 'general'),
('进', 'zh', 'general'),
('成', 'zh', 'general'),
('回', 'zh', 'general'),
('什', 'zh', 'general'),
('边', 'zh', 'general'),
('作', 'zh', 'general'),
('对', 'zh', 'general'),
('开', 'zh', 'general'),
('而', 'zh', 'general'),
('己', 'zh', 'general'),
('些', 'zh', 'general'),
('现在', 'zh', 'general'),
('山', 'zh', 'general'),
('民', 'zh', 'general'),
('候', 'zh', 'general'),
('经', 'zh', 'general'),
('发', 'zh', 'general'),
('工', 'zh', 'general'),
('向', 'zh', 'general'),
('事', 'zh', 'general'),
('命', 'zh', 'general'),
('给', 'zh', 'general'),
('长', 'zh', 'general'),
('水', 'zh', 'general'),
('几', 'zh', 'general'),
('义', 'zh', 'general'),
('三', 'zh', 'general'),
('声', 'zh', 'general'),
('于', 'zh', 'general'),
('高', 'zh', 'general'),
('手', 'zh', 'general'),
('知', 'zh', 'general'),
('理', 'zh', 'general'),
('眼', 'zh', 'general'),
('志', 'zh', 'general'),
('点', 'zh', 'general'),
('心', 'zh', 'general'),
('战', 'zh', 'general'),
('二', 'zh', 'general'),
('问', 'zh', 'general'),
('但', 'zh', 'general'),
('身', 'zh', 'general'),
('方', 'zh', 'general'),
('实', 'zh', 'general'),
('吃', 'zh', 'general'),
('做', 'zh', 'general'),
('叫', 'zh', 'general'),
('当', 'zh', 'general'),
('住', 'zh', 'general'),
('听', 'zh', 'general'),
('革', 'zh', 'general'),
('打', 'zh', 'general'),
('呢', 'zh', 'general'),
('真', 'zh', 'general'),
('全', 'zh', 'general'),
('才', 'zh', 'general'),
('四', 'zh', 'general'),
('已', 'zh', 'general'),
('所', 'zh', 'general'),
('敌', 'zh', 'general'),
('之', 'zh', 'general'),
('最', 'zh', 'general'),
('光', 'zh', 'general'),
('产', 'zh', 'general'),
('情', 'zh', 'general'),
('路', 'zh', 'general'),
('分', 'zh', 'general'),
('总', 'zh', 'general'),
('条', 'zh', 'general'),
('白', 'zh', 'general'),
('话', 'zh', 'general'),
('东', 'zh', 'general'),
('席', 'zh', 'general'),
('次', 'zh', 'general'),
('亲', 'zh', 'general'),
('如', 'zh', 'general'),
('被', 'zh', 'general'),
('花', 'zh', 'general'),
('口', 'zh', 'general'),
('放', 'zh', 'general'),
('儿', 'zh', 'general'),
('常', 'zh', 'general'),
('气', 'zh', 'general'),
('五', 'zh', 'general'),
('第', 'zh', 'general'),
('使', 'zh', 'general'),
('道', 'zh', 'general'),
('命', 'zh', 'general'),
('己', 'zh', 'general'),
('路', 'zh', 'general'),
('受', 'zh', 'general'),
('间', 'zh', 'general'),
('他', 'zh', 'general'),
('们', 'zh', 'general'),
('地', 'zh', 'general'),
('她', 'zh', 'general'),
('哪', 'zh', 'general'),
('怎', 'zh', 'general');

-- 插入系统配置
INSERT IGNORE INTO system_configs (config_key, config_value, description) VALUES
('tfidf.max_features', '1000', 'TF-IDF最大特征数量'),
('tfidf.min_df', '2', 'TF-IDF最小文档频率'),
('tfidf.max_df', '0.8', 'TF-IDF最大文档频率'),
('model.default_threshold', '0.5', '默认违规判定阈值'),
('collection.rate_limit', '5', '采集速率限制（每秒）'),
('collection.concurrent_limit', '10', '采集并发限制'),
('text.min_length', '5', '文本最小长度'),
('text.max_length', '500', '文本最大长度'),
('cache.ttl_seconds', '3600', '缓存过期时间（秒）'),
('kafka.topic.raw_text', 'raw-text-topic', '原始文本Topic'),
('kafka.topic.processed_text', 'processed-text-topic', '预处理文本Topic');