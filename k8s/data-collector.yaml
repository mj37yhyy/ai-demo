apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-collector
  namespace: text-audit
  labels:
    app: data-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-collector
  template:
    metadata:
      labels:
        app: data-collector
    spec:
      containers:
      - name: data-collector
        image: text-audit/data-collector:latest
        ports:
        - containerPort: 8081
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: DATABASE_PORT
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: text-audit-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: DATABASE_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: REDIS_PORT
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: KAFKA_BROKERS
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: MINIO_ENDPOINT
        - name: MINIO_ACCESS_KEY
          valueFrom:
            configMapKeyRef:
              name: text-audit-config
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: text-audit-secrets
              key: MINIO_SECRET_KEY
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: data-collector-config

---
apiVersion: v1
kind: Service
metadata:
  name: data-collector-service
  namespace: text-audit
  labels:
    app: data-collector
spec:
  selector:
    app: data-collector
  ports:
  - port: 8081
    targetPort: 8081
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-collector-config
  namespace: text-audit
data:
  config.yaml: |
    # 服务器配置
    server:
      host: "0.0.0.0"
      port: 8081
      mode: "release"
      read_timeout: 30s
      write_timeout: 30s
      idle_timeout: 60s

    # 数据库配置
    database:
      host: "mysql-service"
      port: 3306
      user: "audit_user"
      password: "audit_pass"
      dbname: "text_audit"
      charset: "utf8mb4"
      parse_time: true
      loc: "Local"
      max_idle_conns: 10
      max_open_conns: 100
      conn_max_lifetime: 3600s

    # Redis配置
    redis:
      host: "redis-service"
      port: 6379
      password: ""
      db: 0
      pool_size: 10
      min_idle_conns: 5

    # Kafka配置
    kafka:
      brokers: ["kafka-service:9092"]
      topic: "text-processing"
      group_id: "data-collector"

    # MinIO配置
    minio:
      endpoint: "minio-service:9000"
      access_key: "minioadmin"
      secret_key: "minioadmin123"
      bucket: "text-audit"
      use_ssl: false

    # 日志配置
    logging:
      level: "info"
      format: "json"
      output: "stdout"