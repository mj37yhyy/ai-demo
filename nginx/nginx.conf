user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
    upstream data_collector {
        server data-collector:8080 max_fails=3 fail_timeout=30s;
    }

    upstream data_preprocessor {
        server data-preprocessor:8082 max_fails=3 fail_timeout=30s;
    }

    upstream model_trainer {
        server model-trainer:8084 max_fails=3 fail_timeout=30s;
    }

    upstream model_inference {
        server model-inference:8083 max_fails=3 fail_timeout=30s;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }

    # 主配置
    server {
        listen 80;
        server_name localhost;

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 数据收集服务
        location /api/v1/collector/ {
            proxy_pass http://data_collector/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 数据预处理服务
        location /api/v1/preprocessor/ {
            proxy_pass http://data_preprocessor/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 模型训练服务
        location /api/v1/trainer/ {
            proxy_pass http://model_trainer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 模型推理服务
        location /api/v1/inference/ {
            proxy_pass http://model_inference/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Grafana监控面板
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 静态文件服务
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 默认页面
        location / {
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>AI-Demo Production Environment</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .service { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
        .service h3 { margin-top: 0; color: #333; }
        .service a { color: #007bff; text-decoration: none; }
        .service a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>AI-Demo 生产环境</h1>
    <p>欢迎使用AI-Demo知乎数据处理和ChatGLM-6B微调系统</p>
    
    <div class="service">
        <h3>数据收集服务</h3>
        <p><a href="/api/v1/collector/health">健康检查</a> | <a href="/api/v1/collector/metrics">指标</a></p>
    </div>
    
    <div class="service">
        <h3>数据预处理服务</h3>
        <p><a href="/api/v1/preprocessor/actuator/health">健康检查</a> | <a href="/api/v1/preprocessor/actuator/metrics">指标</a></p>
    </div>
    
    <div class="service">
        <h3>模型训练服务</h3>
        <p><a href="/api/v1/trainer/actuator/health">健康检查</a> | <a href="/api/v1/trainer/actuator/metrics">指标</a></p>
    </div>
    
    <div class="service">
        <h3>模型推理服务</h3>
        <p><a href="/api/v1/inference/health">健康检查</a> | <a href="/api/v1/inference/metrics">指标</a></p>
    </div>
    
    <div class="service">
        <h3>监控面板</h3>
        <p><a href="/grafana/">Grafana Dashboard</a></p>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}